{"version":3,"sources":["components/all-game-cards.js","components/focused-game-card.js","components/error-check.js","components/search-tool.js","App.js","serviceWorker.js","index.js"],"names":["props","className","games","map","game","Card","key","id","onClick","handleGameClick","Body","Title","src","visitor_team","full_name","visitor_team_score","home_team_score","bg","home_team","Subtitle","time","status","city","Alert","variant","onClose","setShow","dismissible","Heading","onSubmit","handleSubmit","type","value","name","onChange","pageChange","App","jazzMem","abbreviation","useState","date","setDate","allGames","setAllGames","filteredGames","setFilteredGames","selectedGame","setSelectedGame","loading","setLoading","showAlert","setShowAlert","getAllGames","useCallback","page","fetch","then","response","json","catch","Promise","r","setTimeout","result","meta","next_page","concat","data","apiCallGames","a","url","apiFetchData","checkForErrors","apiGameById","ok","console","log","find","gameData","event","preventDefault","filter","includes","useEffect","finally","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","rel","href","integrity","crossorigin","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0de9f184.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from 'react-bootstrap/esm/Card';\r\n\r\nexport default function (props) {\r\n  return (\r\n    <div className=\"d-flex justify-content-center flex-wrap\">\r\n        {props.games?.map((game) =>\r\n          <Card className=\"cardHover m-4 .flex-grow-*\" key={game.id} onClick={() => props.handleGameClick(game.id)}>\r\n          <Card.Body>\r\n            <Card.Title className='text-center mb-0'><img src={`img/${game.visitor_team.full_name}.png`}></img>{`${game.visitor_team_score} - ${game.home_team_score}`}<img bg=\"dark\" src={`img/${game.home_team.full_name}.png`}></img></Card.Title>\r\n            <Card.Subtitle className=\"text-center\">{game.time} {game.status}</Card.Subtitle>\r\n          </Card.Body>\r\n        </Card>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nexport default function (props) {\r\n  const game = props.game;\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Title className='mb-0'><img src={`img/${game.visitor_team.full_name}.png`}></img>{`${game.visitor_team.full_name} @ ${game.home_team.full_name}`}<img bg=\"dark\" src={`img/${game.home_team.full_name}.png`}></img></Card.Title>\r\n          <div className='d-flex flex-row justify-content-center h1 font-weight-bold'>\r\n            <span>{game.visitor_team_score}</span>\r\n            <span className='px-5'>-</span>\r\n            <span>{game.home_team_score}</span>\r\n          </div>\r\n          <Card.Subtitle>{game.time} {game.status} - {game.home_team.city}</Card.Subtitle>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nexport default function (props) {\r\n  return (\r\n    <Alert variant=\"danger\" onClose={() => props.setShow(false)} dismissible>\r\n      <Alert.Heading>Temporary Error</Alert.Heading>\r\n      <p className='text-danger'>There are too many concurrent requests hitting the API, try again in a couple minutes.</p>\r\n    </Alert>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function(props) {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <label>\r\n          <input type=\"text\" value={props.name} onChange={props.pageChange} />\r\n        </label>\r\n        <input className='btn' type=\"submit\" value=\"Get Games\" />\r\n      </form>\r\n    );\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './App.css';\r\n\r\nimport GameListTable from './components/all-game-cards';\r\nimport GameDetailsCard from './components/focused-game-card';\r\nimport Alert from './components/error-check';\r\nimport SearchForm from './components/search-tool';\r\n\r\nfunction App() {\r\n  const jazzMem = {\r\n    id: 474592,\r\n    time: '3:44',\r\n    status: '4th Qtr',\r\n    home_team_score: 121,\r\n    visitor_team_score: 115,\r\n    home_team: {\r\n      abbreviation: 'UTA',\r\n      full_name: 'Utah Jazz',\r\n      city: 'Utah'\r\n    },\r\n    visitor_team: {\r\n      abbreviation: 'MEM',\r\n      full_name: 'Memphis Grizzlies'\r\n    },\r\n  };\r\n\r\n  const [date, setDate] = useState('2022-04-05');\r\n  const [allGames, setAllGames] = useState([]);\r\n  const [filteredGames, setFilteredGames] = useState([jazzMem]);\r\n  const [selectedGame, setSelectedGame] = useState(jazzMem);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const getAllGames = useCallback((page, games) => {\r\n    if (page) {\r\n      return fetch(`https://www.balldontlie.io/api/v1/games?per_page=100&page=${page}`)\r\n        .then((response) => response.json())\r\n        .catch(() => new Promise((r) => setTimeout(r, 25000)).then(() => getAllGames(page, games)))\r\n        .then((result) => {\r\n          return getAllGames(result.meta?.next_page, games.concat(result.data));\r\n        });\r\n    } else return games;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllGames(1, [])\r\n      .then(setAllGames)\r\n      .finally(() => setLoading(false));\r\n  }, [getAllGames]);\r\n\r\n  async function apiCallGames(date) {\r\n    const url = `https://www.balldontlie.io/api/v1/games?per_page=100&dates[]=${date}`;\r\n    const result = await apiFetchData(url);\r\n    setFilteredGames(result.data);\r\n  }\r\n\r\n  async function apiFetchData(url) {\r\n    return await fetch(url).then(checkForErrors);\r\n  }\r\n\r\n  async function apiGameById(id) {\r\n    return await apiFetchData(`https://www.balldontlie.io/api/v1/games/${id}`);\r\n  }\r\n\r\n  async function checkForErrors(r) {\r\n    if (r.ok) {\r\n      return await r.json();\r\n    } else {\r\n      setShowAlert(true);\r\n      console.log(r);\r\n    }\r\n  }\r\n\r\n  async function handleGameClick(id) {\r\n    \r\n    let gameData = loading ? await apiGameById(id) : allGames.find((game) => game.id === id);\r\n\r\n    setSelectedGame({\r\n      ...gameData,\r\n    });\r\n  }\r\n\r\n  function pageChange(event) {\r\n    setDate(event.target.value);\r\n  }\r\n\r\n  async function submitForm(event) {\r\n    event.preventDefault();\r\n    if (loading) await apiCallGames(date);\r\n    else setFilteredGames(allGames.filter((game) => `${game.date}`.includes(date)));\r\n  }\r\n\r\n  return (\r\n    <body className='bodyBackground'>\r\n      <article>\r\n        <section className=\"center search-form\">\r\n          <div className='cardBackground'>\r\n            <GameDetailsCard game={selectedGame}></GameDetailsCard>\r\n          </div>\r\n          <div className='form h5'>\r\n            <p>Enter a Date to see relavent games (YYYY-MM-DD):</p>\r\n          <SearchForm name={date} handleSubmit={submitForm} pageChange={pageChange}></SearchForm>\r\n          </div>\r\n          <p className='h5'>Clicking on a game will make it become the focused game.</p>\r\n        </section>\r\n        <section className='gameListSection'>\r\n          {showAlert ? <Alert setShow={setShowAlert}></Alert> : null}\r\n          <GameListTable games={filteredGames} handleGameClick={handleGameClick}></GameListTable>\r\n        </section>\r\n      </article>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    <link\r\n      rel=\"stylesheet\"\r\n      href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\r\n      integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\"\r\n      crossorigin=\"anonymous\"\r\n    />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}